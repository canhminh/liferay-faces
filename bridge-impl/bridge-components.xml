<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE components>
<components>
	<description>
		<![CDATA[The Liferay Faces Bridge facelet component tags with the <code>bridge:</code> tag name prefix.]]>
	</description>
	<!-- generateTaglibXML="false" tags for common attributes -->
	<!-- 1. Interfaces -->
	<component name="AltInherited" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying alternative information about the rendered HTML element.]]>
				</description>
				<inherited>true</inherited>
				<name>alt</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="AutocompleteInherited" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying whether autocomplete is turned on or off for the rendered HTML element. Valid values include <code>on</code> (default) and <code>off</code>.]]>
				</description>
				<inherited>true</inherited>
				<name>autocomplete</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="DisabledInherited" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the component will be disabled, and the user will be unable to intercat with the component.]]>
				</description>
				<defaultValue>false</defaultValue>
				<generateJava>false</generateJava>
				<inherited>true</inherited>
				<name>disabled</name>
				<type>boolean</type>
			</attribute>
		</attributes>
	</component>
	<component name="SizeInherited" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the visual length of the element.]]>
				</description>
				<inherited>true</inherited>
				<name>size</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="StyleableInherited" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the css style of the element.]]>
				</description>
				<name>style</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]>
				</description>
				<name>styleClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<!-- /Interfaces -->
	<!-- 2. JSF Custom Component Heirarchy -->
	<component name="UIComponentBase" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]>
				</description>
				<name>binding</name>
				<type>javax.faces.component.UIComponent</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A unique identifier for this component.]]>
				</description>
				<name>id</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]>
				</description>
				<name>rendered</name>
				<type>boolean</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
 	<component name="UIInput" extendsTags="UIOutput" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]>
				</description>
				<name>converterMessage</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]>
				</description>
				<name>immediate</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]>
				</description>
				<name>required</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]>
				</description>
				<name>requiredMessage</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]>
				</description>
				<name>validator</name>
				<method-signature>
					void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)
				</method-signature>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]>
				</description>
				<name>validatorMessage</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]>
				</description>
				<name>valueChangeListener</name>
				<method-signature>
					void valueChange(javax.faces.event.ValueChangeEvent)
				</method-signature>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="UIOutput" extendsTags="UIComponentBase" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[The class name of the converter instance that is to be used by this component.]]>
				</description>
				<name>converter</name>
				<type>javax.faces.convert.Converter</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]>
				</description>
				<name>value</name>
				<type>java.lang.Object</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<!-- /JSF Custom Component Heirarchy -->
	<!-- 3. HTML Component Heirarchy -->
	<component name="FacesMessageLabel" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
				<name>label</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
				<inherited>true</inherited>
			</attribute>
		</attributes>
	</component>
	<component name="HTMLAccessibility" extendsTags="HTMLCommonEvents HTMLPassthrough" generateJava="false"
		generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]>
				</description>
				<name>accesskey</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]>
				</description>
				<name>tabindex</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="HTMLAccessibilityEvents" extendsTags="HTMLAccessibility" generateJava="false"
		generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[Javascript to execute after this component loses focus.]]>
				</description>
				<name>onblur</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when this component gets focus.]]>
				</description>
				<name>onfocus</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="HTMLCommonEvents" extendsTags="StyleableInherited UIComponentBase" generateJava="false"
		generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when this component is clicked.]]>
				</description>
				<name>onclick</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a double click event occurs.]]>
				</description>
				<name>ondblclick</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keydown event occurs.]]>
				</description>
				<name>onkeydown</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keypress event occurs.]]>
				</description>
				<name>onkeypress</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keyup event occurs.]]>
				</description>
				<name>onkeyup</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mousedown event occurs.]]>
				</description>
				<name>onmousedown</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mousemove event occurs.]]>
				</description>
				<name>onmousemove</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseout event occurs.]]>
				</description>
				<name>onmouseout</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseover event occurs.]]>
				</description>
				<name>onmouseover</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseup event occurs.]]>
				</description>
				<name>onmouseup</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="HTMLInput" extendsTags="UIInput" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]>
				</description>
				<name>readonly</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="HTMLInputEvents" extendsTags="HTMLInput" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]>
				</description>
				<name>onchange</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when the user selects this component.]]>
				</description>
				<name>onselect</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="HTMLPassthrough" extendsTags="StyleableInherited UIComponentBase" generateJava="false"
		generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]>
				</description>
				<name>dir</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the language code used in the element.]]>
				</description>
				<name>lang</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]>
				</description>
				<name>role</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the title of the element.]]>
				</description>
				<name>title</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<!-- /HTML Component Heirarchy -->
	<!-- 4. Common -->
	<component name="InputCommon" extendsTags="HTMLAccessibilityEvents HTMLInputEvents StyleableInherited"
		generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the maximum length of characters allowed in the element.]]>
				</description>
				<name>maxlength</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<!-- /Common -->
	<!-- generateTaglibXML="false" tags for common attributes -->
	<component name="InputText" extendsTags="AltInherited AutocompleteInherited DisabledInherited FacesMessageLabel InputCommon SizeInherited"
		generateJava="false" parentClass="javax.faces.component.html.HtmlInputText"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[InputText is a UIInput component that renders a field for editing single-line text. Since it extends HtmlInputText, it supports all the features of h:inputText.]]>
		</description>
	</component>
	<component name="InputFile" extendsTags="InputText" handlerClass="com.liferay.faces.bridge.component.inputfile.internal.InputFileHandler"
		module="uploader" parentClass="javax.faces.component.html.HtmlInputFile"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[InputFile is a UIInput component that renders an <code>&lt;input&gt;</code> element with type=file. Since it extends HtmlInputFile, it supports all the features of h:inputFile and also supports multi-file uploads.]]>
		</description>
		<attributes>
			<attribute>
				<defaultValue>false</defaultValue>
				<description>
					<![CDATA[When this flag is true, files are uploaded automatically as soon as they are selected. The default value is false.]]>
				</description>
				<name>auto</name>
				<type>boolean</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed when a file is uploaded. The method must be <code>public</code>, return <code>void</code>, and take a <code>FileUploadEvent</code> argument.]]>
				</description>
				<name>fileUploadListener</name>
				<method-signature>
					void fileUploadListener(com.liferay.faces.util.component.inputfile.FileUploadEvent)
				</method-signature>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying whether or not multiple files can be uploaded. Valid values are blank (to upload a single file) or "multiple" (to upload multiple files).]]>
				</description>
				<type>java.lang.String</type>
				<name>multiple</name>
			</attribute>
		</attributes>
	</component>
</components>
